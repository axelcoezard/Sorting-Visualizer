{"version":3,"sources":["Algorithms/Algorithm.js","Algorithms/SelectionSort.js","Algorithms/InsertionSort.js","Algorithms/BubbleSort.js","Visualizer/Visualizer.js","serviceWorker.js","index.js"],"names":["Algorithm","name","this","steps","next_step","step","push","index","SelectionSort","items","new_items","pointer","length","minimum","minimum_index","addStep","size","tmp","left","right","InsertionSort","BubbleSort","Visualizer","props","state","executing","itemsCount","handleRandom","bind","handleRange","handleSort","setState","generateItems","i","Math","floor","random","className","event","value","currentTarget","algorithm","sorter","Error","execute","stepIndex","setTimeout","forEach","item","select","undefined","swap","type","onClick","min","max","onChange","e","map","style","height","key","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26017b4f.chunk.js","sourcesContent":["export default class Algorithm {\r\n\r\n  constructor (name) {\r\n    this.name = name\r\n    this.steps = []\r\n    this.next_step = 0\r\n  }\r\n\r\n  addStep (step) {\r\n    this.steps.push(step)\r\n  }\r\n\r\n  getStep (index) {\r\n    return this.steps[index]\r\n  }\r\n\r\n  removeStep (index) {\r\n    delete this.steps[index]\r\n  }\r\n\r\n}\r\n","import Algorithm from \"./Algorithm\"\r\n\r\nexport default class SelectionSort extends Algorithm {\r\n\r\n  constructor () {\r\n    super(\"Tri par sélection\")\r\n  }\r\n\r\n  execute (items) {\r\n    let new_items = [...items]\r\n\r\n    let pointer = 0\r\n    while (pointer < new_items.length) {\r\n      let minimum = new_items[pointer]\r\n      let minimum_index = pointer\r\n\r\n      let index = pointer\r\n      while (index < new_items.length) {\r\n        this.addStep({\r\n          \"select\": index\r\n        })\r\n\r\n        if (new_items[index].size < minimum.size) {\r\n          minimum = new_items[index]\r\n          minimum_index = index\r\n        }\r\n        index++\r\n      }\r\n\r\n      let tmp = new_items[pointer]\r\n      new_items[pointer] = minimum\r\n      new_items[minimum_index] = tmp\r\n\r\n      this.addStep({\r\n        \"swap\": {\r\n          left: pointer, \r\n          right: minimum_index\r\n        }\r\n      })\r\n\r\n      pointer++;\r\n    }\r\n\r\n    return new_items\r\n  }\r\n\r\n}\r\n","import Algorithm from \"./Algorithm\"\r\n\r\nexport default class InsertionSort extends Algorithm {\r\n\r\n  constructor () {\r\n    super(\"Tri par insertion\")\r\n  }\r\n\r\n}\r\n","import Algorithm from \"./Algorithm\"\r\n\r\nclass BubbleSort extends Algorithm {\r\n\r\n  constructor() {\r\n    super(\"Tri à bulles\")\r\n  }\r\n\r\n  execute(items) {\r\n    let new_items = [...items]\r\n\r\n    let pointer = 0\r\n    while (pointer < new_items.length) {\r\n      let left = 0\r\n      let right = 1\r\n      while (right < new_items.length - pointer) {\r\n        this.addStep({ \"select\": left })\r\n        this.addStep({ \"select\": right })\r\n        if (new_items[right].size < new_items[left].size) {\r\n          let tmp = new_items[left]\r\n          new_items[left] = new_items[right]\r\n          new_items[right] = tmp\r\n          this.addStep({\r\n            \"swap\": { left, right }\r\n          })\r\n        }\r\n        left++\r\n        right++\r\n      }\r\n      pointer++\r\n    }    \r\n  }\r\n}\r\n\r\n// this.addStep({\r\n//   \"swap\": {\r\n//     pointer, minimum_index\r\n//   }\r\n// })\r\n\r\nexport default BubbleSort","import React from 'react';\r\n\r\nimport SelectionSort from \"../Algorithms/SelectionSort\"\r\nimport InsertionSort from \"../Algorithms/InsertionSort\"\r\nimport BubbleSort from \"../Algorithms/BubbleSort\"\r\n\r\nexport default class Visualizer extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      executing: false,\r\n      itemsCount: 100,\r\n      items: []\r\n    }\r\n\r\n    this.handleRandom = this.handleRandom.bind(this)\r\n    this.handleRange = this.handleRange.bind(this)\r\n    this.handleSort = this.handleSort.bind(this)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({ items: this.generateItems(this.state.itemsCount) })\r\n  }\r\n\r\n  generateItems (itemsCount) {\r\n    let items = []\r\n    for (let i = 0; i < itemsCount; i++)\r\n      items.push({\r\n        size: Math.floor(Math.random() * 99 + 1),\r\n        className: \"visualizer-item\"\r\n      })\r\n    return items\r\n  }\r\n\r\n  handleRandom (event) {\r\n    this.setState({ items: this.generateItems(this.state.itemsCount) })\r\n  }\r\n\r\n  handleRange(event) {\r\n    let value = event.currentTarget.value\r\n\r\n    this.setState({\r\n      itemsCount: value,\r\n      items: this.generateItems(value)\r\n    })\r\n  }\r\n\r\n  handleSort (event, algorithm) {\r\n    let items = this.state.items\r\n\r\n    let sorter = null\r\n    switch (algorithm) {\r\n      case \"selection\":\r\n        sorter = new SelectionSort()\r\n        break;\r\n      case \"insertion\":\r\n        sorter = new InsertionSort()\r\n        break; \r\n      case \"bubble\":\r\n        sorter = new BubbleSort()\r\n        break;       \r\n      default:\r\n        throw new Error(\"Aucun des tris disponibles ne correpondent...\")\r\n    }\r\n    sorter.execute(items)\r\n\r\n    let stepIndex = 0\r\n    while(stepIndex < sorter.steps.length) {\r\n      let step = sorter.steps[stepIndex]\r\n\r\n      setTimeout(function () {\r\n        items.forEach(item => item.className = \"visualizer-item\")\r\n\r\n        if (step.select !== false && items[step.select] !== undefined) {\r\n          items[step.select].className = \"visualizer-item selected\"\r\n        }\r\n        else if (step.swap) {\r\n          let tmp = items[step.swap.left]\r\n          items[step.swap.left] = items[step.swap.right]\r\n          items[step.swap.right] = tmp\r\n        }\r\n\r\n        this.setState({ items })\r\n      }.bind(this), 5 * stepIndex)\r\n      stepIndex += 1\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return <div className=\"visualizer\">\r\n      <nav className=\"visualizer-navigation\">\r\n        <div className=\"left\">\r\n          <button\r\n            className=\"visualizer-navigation__random\"\r\n            type=\"button\"\r\n            onClick={this.handleRandom}\r\n          ><i className=\"fas fa-random\"></i></button>\r\n          <input\r\n            className=\"visualizer-navigation__count\"\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={this.state.itemsCount}\r\n            onChange={this.handleRange}\r\n          />\r\n        </div>\r\n        <div className=\"right\">\r\n          <button\r\n            className=\"visualizer-navigation__sorter\"\r\n            type=\"button\"\r\n            onClick={(e) => this.handleSort(e, \"selection\")}\r\n          >Tri par sélection</button>\r\n          {/* <button\r\n            className=\"visualizer-navigation__sorter\"\r\n            type=\"button\"\r\n            onClick={(e) => this.handleSort(e, \"insertion\")}\r\n          >Tri par insertion</button> */}\r\n          <button\r\n            className=\"visualizer-navigation__sorter\"\r\n            type=\"button\"\r\n            onClick={(e) => this.handleSort(e, \"bubble\")}\r\n          >Tri à bulle</button>\r\n        </div>\r\n      </nav>\r\n      <div className=\"visualizer-container\">\r\n        {this.state.items.map((item, index) => {\r\n          if(item !== undefined) {\r\n            return <div\r\n            className={item.className}\r\n            style={{\r\n              height: item.size + \"%\"\r\n            }}\r\n            key={index}\r\n            />\r\n          }\r\n          return null\r\n        })}\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Visualizer from './Visualizer/Visualizer';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./index.css\"\nimport \"./fontawesome.css\"\n\nReactDOM.render(<Visualizer />, document.getElementById('root'));\n\nserviceWorker.register()\n"],"sourceRoot":""}